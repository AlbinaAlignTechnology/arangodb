
#ifndef TRIAGENS_BASICS_EXIT_CODES_H
#define TRIAGENS_BASICS_EXIT_CODES_H 1

////////////////////////////////////////////////////////////////////////////////
/// Exit codes and meanings
///
/// The following codes might be retured when exiting ArangoDB:
///
#include "Basics/error.h"
/// - 0: @LIT{success}
///   No error has occurred.
/// - 1: @LIT{failed}
///   Will be returned when a general error occurred.
/// - 10: @LIT{upgrade failed}
///   Will be returend when the Database upgrade failed
/// -  20: @LIT{already running}
///   Will be returend when arangod is already running according to PID-file
/// -  21: @LIT{port blocked}
///   Will be returend when endpoint is taken by antoher process
////////////////////////////////////////////////////////////////////////////////

////////////////////////////////////////////////////////////////////////////////
/// @brief helper macro to define an exit code string
////////////////////////////////////////////////////////////////////////////////

#define REG_EXIT(id, label) TRI_set_exitno_string(TRI_ ## id, label);

////////////////////////////////////////////////////////////////////////////////
/// @brief register all exit codes for ArangoDB
////////////////////////////////////////////////////////////////////////////////

void TRI_InitializeExitMessages ();

////////////////////////////////////////////////////////////////////////////////
/// @brief 0: EXIT_SUCCESS
///
/// success
///
/// No error has occurred.
////////////////////////////////////////////////////////////////////////////////

#define TRI_EXIT_SUCCESS                                                  (0)

////////////////////////////////////////////////////////////////////////////////
/// @brief 1: EXIT_FAILED
///
/// failed
///
/// Will be returned when a general error occurred.
////////////////////////////////////////////////////////////////////////////////

#define TRI_EXIT_FAILED                                                   (1)

////////////////////////////////////////////////////////////////////////////////
/// @brief 10: EXIT_UPGRADE
///
/// upgrade failed
///
/// Will be returend when the Database upgrade failed
////////////////////////////////////////////////////////////////////////////////

#define TRI_EXIT_UPGRADE                                                  (10)

////////////////////////////////////////////////////////////////////////////////
/// @brief  20: EXIT_ALREADY_RUNNING
///
/// already running
///
/// Will be returend when arangod is already running according to PID-file
////////////////////////////////////////////////////////////////////////////////

#define TRI_EXIT_ALREADY_RUNNING                                          ( 20)

////////////////////////////////////////////////////////////////////////////////
/// @brief  21: EXIT_PORT_BLOCKED
///
/// port blocked
///
/// Will be returend when endpoint is taken by antoher process
////////////////////////////////////////////////////////////////////////////////

#define TRI_EXIT_PORT_BLOCKED                                             ( 21)

#endif

